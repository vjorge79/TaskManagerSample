name: PR → develop | Build, Test, SonarCloud

on:
  pull_request:
    branches: [ develop ]

jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necessário para análise/PR decoration correta

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Add tools to PATH
        run: echo "${HOME}/.dotnet/tools" >> $GITHUB_PATH

      - name: SonarCloud Begin (PR)
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin \
            /k:"vjorge79_TaskManagerSample" \
            /o:"vjorge79" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.token="${SONAR_TOKEN}" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.exclusions="**/bin/**,**/obj/**,**/*Migrations*/**" \
            /d:sonar.pullrequest.key="${{ github.event.pull_request.number }}" \
            /d:sonar.pullrequest.branch="${{ github.head_ref }}" \
            /d:sonar.pullrequest.base="${{ github.base_ref }}"

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test + Coverage (Coverlet → OpenCover)
        run: >
          dotnet test --configuration Release --no-build
          /p:CollectCoverage=true
          /p:CoverletOutput=TestResults/coverage/
          /p:CoverletOutputFormat=opencover

      - name: SonarCloud End
        if: always()
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.token="${SONAR_TOKEN}"
